// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: graph.proto

#ifndef PROTOBUF_INCLUDED_graph_2eproto
#define PROTOBUF_INCLUDED_graph_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_graph_2eproto 

namespace protobuf_graph_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[8];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_graph_2eproto
namespace seegnify {
namespace graph {
class ErrorResponse;
class ErrorResponseDefaultTypeInternal;
extern ErrorResponseDefaultTypeInternal _ErrorResponse_default_instance_;
class GetWeights;
class GetWeightsDefaultTypeInternal;
extern GetWeightsDefaultTypeInternal _GetWeights_default_instance_;
class GetWeightsResponse;
class GetWeightsResponseDefaultTypeInternal;
extern GetWeightsResponseDefaultTypeInternal _GetWeightsResponse_default_instance_;
class Request;
class RequestDefaultTypeInternal;
extern RequestDefaultTypeInternal _Request_default_instance_;
class Response;
class ResponseDefaultTypeInternal;
extern ResponseDefaultTypeInternal _Response_default_instance_;
class SetWeights;
class SetWeightsDefaultTypeInternal;
extern SetWeightsDefaultTypeInternal _SetWeights_default_instance_;
class SuccessResponse;
class SuccessResponseDefaultTypeInternal;
extern SuccessResponseDefaultTypeInternal _SuccessResponse_default_instance_;
class UpdWeights;
class UpdWeightsDefaultTypeInternal;
extern UpdWeightsDefaultTypeInternal _UpdWeights_default_instance_;
}  // namespace graph
}  // namespace seegnify
namespace google {
namespace protobuf {
template<> ::seegnify::graph::ErrorResponse* Arena::CreateMaybeMessage<::seegnify::graph::ErrorResponse>(Arena*);
template<> ::seegnify::graph::GetWeights* Arena::CreateMaybeMessage<::seegnify::graph::GetWeights>(Arena*);
template<> ::seegnify::graph::GetWeightsResponse* Arena::CreateMaybeMessage<::seegnify::graph::GetWeightsResponse>(Arena*);
template<> ::seegnify::graph::Request* Arena::CreateMaybeMessage<::seegnify::graph::Request>(Arena*);
template<> ::seegnify::graph::Response* Arena::CreateMaybeMessage<::seegnify::graph::Response>(Arena*);
template<> ::seegnify::graph::SetWeights* Arena::CreateMaybeMessage<::seegnify::graph::SetWeights>(Arena*);
template<> ::seegnify::graph::SuccessResponse* Arena::CreateMaybeMessage<::seegnify::graph::SuccessResponse>(Arena*);
template<> ::seegnify::graph::UpdWeights* Arena::CreateMaybeMessage<::seegnify::graph::UpdWeights>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace seegnify {
namespace graph {

// ===================================================================

class GetWeights : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:seegnify.graph.GetWeights) */ {
 public:
  GetWeights();
  virtual ~GetWeights();

  GetWeights(const GetWeights& from);

  inline GetWeights& operator=(const GetWeights& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetWeights(GetWeights&& from) noexcept
    : GetWeights() {
    *this = ::std::move(from);
  }

  inline GetWeights& operator=(GetWeights&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetWeights& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetWeights* internal_default_instance() {
    return reinterpret_cast<const GetWeights*>(
               &_GetWeights_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(GetWeights* other);
  friend void swap(GetWeights& a, GetWeights& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetWeights* New() const final {
    return CreateMaybeMessage<GetWeights>(NULL);
  }

  GetWeights* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetWeights>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetWeights& from);
  void MergeFrom(const GetWeights& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetWeights* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:seegnify.graph.GetWeights)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_graph_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetWeightsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:seegnify.graph.GetWeightsResponse) */ {
 public:
  GetWeightsResponse();
  virtual ~GetWeightsResponse();

  GetWeightsResponse(const GetWeightsResponse& from);

  inline GetWeightsResponse& operator=(const GetWeightsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetWeightsResponse(GetWeightsResponse&& from) noexcept
    : GetWeightsResponse() {
    *this = ::std::move(from);
  }

  inline GetWeightsResponse& operator=(GetWeightsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetWeightsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetWeightsResponse* internal_default_instance() {
    return reinterpret_cast<const GetWeightsResponse*>(
               &_GetWeightsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(GetWeightsResponse* other);
  friend void swap(GetWeightsResponse& a, GetWeightsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetWeightsResponse* New() const final {
    return CreateMaybeMessage<GetWeightsResponse>(NULL);
  }

  GetWeightsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetWeightsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetWeightsResponse& from);
  void MergeFrom(const GetWeightsResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetWeightsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes weights = 1;
  bool has_weights() const;
  void clear_weights();
  static const int kWeightsFieldNumber = 1;
  const ::std::string& weights() const;
  void set_weights(const ::std::string& value);
  #if LANG_CXX11
  void set_weights(::std::string&& value);
  #endif
  void set_weights(const char* value);
  void set_weights(const void* value, size_t size);
  ::std::string* mutable_weights();
  ::std::string* release_weights();
  void set_allocated_weights(::std::string* weights);

  // @@protoc_insertion_point(class_scope:seegnify.graph.GetWeightsResponse)
 private:
  void set_has_weights();
  void clear_has_weights();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr weights_;
  friend struct ::protobuf_graph_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetWeights : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:seegnify.graph.SetWeights) */ {
 public:
  SetWeights();
  virtual ~SetWeights();

  SetWeights(const SetWeights& from);

  inline SetWeights& operator=(const SetWeights& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetWeights(SetWeights&& from) noexcept
    : SetWeights() {
    *this = ::std::move(from);
  }

  inline SetWeights& operator=(SetWeights&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetWeights& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetWeights* internal_default_instance() {
    return reinterpret_cast<const SetWeights*>(
               &_SetWeights_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(SetWeights* other);
  friend void swap(SetWeights& a, SetWeights& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetWeights* New() const final {
    return CreateMaybeMessage<SetWeights>(NULL);
  }

  SetWeights* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetWeights>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SetWeights& from);
  void MergeFrom(const SetWeights& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetWeights* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes weights = 1;
  bool has_weights() const;
  void clear_weights();
  static const int kWeightsFieldNumber = 1;
  const ::std::string& weights() const;
  void set_weights(const ::std::string& value);
  #if LANG_CXX11
  void set_weights(::std::string&& value);
  #endif
  void set_weights(const char* value);
  void set_weights(const void* value, size_t size);
  ::std::string* mutable_weights();
  ::std::string* release_weights();
  void set_allocated_weights(::std::string* weights);

  // @@protoc_insertion_point(class_scope:seegnify.graph.SetWeights)
 private:
  void set_has_weights();
  void clear_has_weights();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr weights_;
  friend struct ::protobuf_graph_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdWeights : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:seegnify.graph.UpdWeights) */ {
 public:
  UpdWeights();
  virtual ~UpdWeights();

  UpdWeights(const UpdWeights& from);

  inline UpdWeights& operator=(const UpdWeights& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdWeights(UpdWeights&& from) noexcept
    : UpdWeights() {
    *this = ::std::move(from);
  }

  inline UpdWeights& operator=(UpdWeights&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdWeights& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdWeights* internal_default_instance() {
    return reinterpret_cast<const UpdWeights*>(
               &_UpdWeights_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(UpdWeights* other);
  friend void swap(UpdWeights& a, UpdWeights& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdWeights* New() const final {
    return CreateMaybeMessage<UpdWeights>(NULL);
  }

  UpdWeights* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdWeights>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdWeights& from);
  void MergeFrom(const UpdWeights& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdWeights* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes update = 1;
  bool has_update() const;
  void clear_update();
  static const int kUpdateFieldNumber = 1;
  const ::std::string& update() const;
  void set_update(const ::std::string& value);
  #if LANG_CXX11
  void set_update(::std::string&& value);
  #endif
  void set_update(const char* value);
  void set_update(const void* value, size_t size);
  ::std::string* mutable_update();
  ::std::string* release_update();
  void set_allocated_update(::std::string* update);

  // @@protoc_insertion_point(class_scope:seegnify.graph.UpdWeights)
 private:
  void set_has_update();
  void clear_has_update();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr update_;
  friend struct ::protobuf_graph_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SuccessResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:seegnify.graph.SuccessResponse) */ {
 public:
  SuccessResponse();
  virtual ~SuccessResponse();

  SuccessResponse(const SuccessResponse& from);

  inline SuccessResponse& operator=(const SuccessResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SuccessResponse(SuccessResponse&& from) noexcept
    : SuccessResponse() {
    *this = ::std::move(from);
  }

  inline SuccessResponse& operator=(SuccessResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SuccessResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SuccessResponse* internal_default_instance() {
    return reinterpret_cast<const SuccessResponse*>(
               &_SuccessResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(SuccessResponse* other);
  friend void swap(SuccessResponse& a, SuccessResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SuccessResponse* New() const final {
    return CreateMaybeMessage<SuccessResponse>(NULL);
  }

  SuccessResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SuccessResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SuccessResponse& from);
  void MergeFrom(const SuccessResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SuccessResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:seegnify.graph.SuccessResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_graph_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ErrorResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:seegnify.graph.ErrorResponse) */ {
 public:
  ErrorResponse();
  virtual ~ErrorResponse();

  ErrorResponse(const ErrorResponse& from);

  inline ErrorResponse& operator=(const ErrorResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ErrorResponse(ErrorResponse&& from) noexcept
    : ErrorResponse() {
    *this = ::std::move(from);
  }

  inline ErrorResponse& operator=(ErrorResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ErrorResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ErrorResponse* internal_default_instance() {
    return reinterpret_cast<const ErrorResponse*>(
               &_ErrorResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(ErrorResponse* other);
  friend void swap(ErrorResponse& a, ErrorResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ErrorResponse* New() const final {
    return CreateMaybeMessage<ErrorResponse>(NULL);
  }

  ErrorResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ErrorResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ErrorResponse& from);
  void MergeFrom(const ErrorResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ErrorResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string message = 2;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // required uint32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:seegnify.graph.ErrorResponse)
 private:
  void set_has_status();
  void clear_has_status();
  void set_has_message();
  void clear_has_message();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::uint32 status_;
  friend struct ::protobuf_graph_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:seegnify.graph.Request) */ {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Request(Request&& from) noexcept
    : Request() {
    *this = ::std::move(from);
  }

  inline Request& operator=(Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  enum RequestCase {
    kGetWeights = 10,
    kSetWeights = 11,
    kUpdWeights = 12,
    REQUEST_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Request* internal_default_instance() {
    return reinterpret_cast<const Request*>(
               &_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(Request* other);
  friend void swap(Request& a, Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Request* New() const final {
    return CreateMaybeMessage<Request>(NULL);
  }

  Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .seegnify.graph.GetWeights get_weights = 10;
  bool has_get_weights() const;
  void clear_get_weights();
  static const int kGetWeightsFieldNumber = 10;
  private:
  const ::seegnify::graph::GetWeights& _internal_get_weights() const;
  public:
  const ::seegnify::graph::GetWeights& get_weights() const;
  ::seegnify::graph::GetWeights* release_get_weights();
  ::seegnify::graph::GetWeights* mutable_get_weights();
  void set_allocated_get_weights(::seegnify::graph::GetWeights* get_weights);

  // optional .seegnify.graph.SetWeights set_weights = 11;
  bool has_set_weights() const;
  void clear_set_weights();
  static const int kSetWeightsFieldNumber = 11;
  private:
  const ::seegnify::graph::SetWeights& _internal_set_weights() const;
  public:
  const ::seegnify::graph::SetWeights& set_weights() const;
  ::seegnify::graph::SetWeights* release_set_weights();
  ::seegnify::graph::SetWeights* mutable_set_weights();
  void set_allocated_set_weights(::seegnify::graph::SetWeights* set_weights);

  // optional .seegnify.graph.UpdWeights upd_weights = 12;
  bool has_upd_weights() const;
  void clear_upd_weights();
  static const int kUpdWeightsFieldNumber = 12;
  private:
  const ::seegnify::graph::UpdWeights& _internal_upd_weights() const;
  public:
  const ::seegnify::graph::UpdWeights& upd_weights() const;
  ::seegnify::graph::UpdWeights* release_upd_weights();
  ::seegnify::graph::UpdWeights* mutable_upd_weights();
  void set_allocated_upd_weights(::seegnify::graph::UpdWeights* upd_weights);

  void clear_request();
  RequestCase request_case() const;
  // @@protoc_insertion_point(class_scope:seegnify.graph.Request)
 private:
  void set_has_get_weights();
  void set_has_set_weights();
  void set_has_upd_weights();

  inline bool has_request() const;
  inline void clear_has_request();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  union RequestUnion {
    RequestUnion() {}
    ::seegnify::graph::GetWeights* get_weights_;
    ::seegnify::graph::SetWeights* set_weights_;
    ::seegnify::graph::UpdWeights* upd_weights_;
  } request_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_graph_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:seegnify.graph.Response) */ {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Response(Response&& from) noexcept
    : Response() {
    *this = ::std::move(from);
  }

  inline Response& operator=(Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  enum ResponseCase {
    kGetWeights = 11,
    kSuccess = 12,
    kError = 13,
    RESPONSE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Response* internal_default_instance() {
    return reinterpret_cast<const Response*>(
               &_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(Response* other);
  friend void swap(Response& a, Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Response* New() const final {
    return CreateMaybeMessage<Response>(NULL);
  }

  Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .seegnify.graph.GetWeightsResponse get_weights = 11;
  bool has_get_weights() const;
  void clear_get_weights();
  static const int kGetWeightsFieldNumber = 11;
  private:
  const ::seegnify::graph::GetWeightsResponse& _internal_get_weights() const;
  public:
  const ::seegnify::graph::GetWeightsResponse& get_weights() const;
  ::seegnify::graph::GetWeightsResponse* release_get_weights();
  ::seegnify::graph::GetWeightsResponse* mutable_get_weights();
  void set_allocated_get_weights(::seegnify::graph::GetWeightsResponse* get_weights);

  // optional .seegnify.graph.SuccessResponse success = 12;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 12;
  private:
  const ::seegnify::graph::SuccessResponse& _internal_success() const;
  public:
  const ::seegnify::graph::SuccessResponse& success() const;
  ::seegnify::graph::SuccessResponse* release_success();
  ::seegnify::graph::SuccessResponse* mutable_success();
  void set_allocated_success(::seegnify::graph::SuccessResponse* success);

  // optional .seegnify.graph.ErrorResponse error = 13;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 13;
  private:
  const ::seegnify::graph::ErrorResponse& _internal_error() const;
  public:
  const ::seegnify::graph::ErrorResponse& error() const;
  ::seegnify::graph::ErrorResponse* release_error();
  ::seegnify::graph::ErrorResponse* mutable_error();
  void set_allocated_error(::seegnify::graph::ErrorResponse* error);

  void clear_response();
  ResponseCase response_case() const;
  // @@protoc_insertion_point(class_scope:seegnify.graph.Response)
 private:
  void set_has_get_weights();
  void set_has_success();
  void set_has_error();

  inline bool has_response() const;
  inline void clear_has_response();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  union ResponseUnion {
    ResponseUnion() {}
    ::seegnify::graph::GetWeightsResponse* get_weights_;
    ::seegnify::graph::SuccessResponse* success_;
    ::seegnify::graph::ErrorResponse* error_;
  } response_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_graph_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GetWeights

// -------------------------------------------------------------------

// GetWeightsResponse

// required bytes weights = 1;
inline bool GetWeightsResponse::has_weights() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetWeightsResponse::set_has_weights() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetWeightsResponse::clear_has_weights() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetWeightsResponse::clear_weights() {
  weights_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_weights();
}
inline const ::std::string& GetWeightsResponse::weights() const {
  // @@protoc_insertion_point(field_get:seegnify.graph.GetWeightsResponse.weights)
  return weights_.GetNoArena();
}
inline void GetWeightsResponse::set_weights(const ::std::string& value) {
  set_has_weights();
  weights_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:seegnify.graph.GetWeightsResponse.weights)
}
#if LANG_CXX11
inline void GetWeightsResponse::set_weights(::std::string&& value) {
  set_has_weights();
  weights_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:seegnify.graph.GetWeightsResponse.weights)
}
#endif
inline void GetWeightsResponse::set_weights(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_weights();
  weights_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:seegnify.graph.GetWeightsResponse.weights)
}
inline void GetWeightsResponse::set_weights(const void* value, size_t size) {
  set_has_weights();
  weights_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:seegnify.graph.GetWeightsResponse.weights)
}
inline ::std::string* GetWeightsResponse::mutable_weights() {
  set_has_weights();
  // @@protoc_insertion_point(field_mutable:seegnify.graph.GetWeightsResponse.weights)
  return weights_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetWeightsResponse::release_weights() {
  // @@protoc_insertion_point(field_release:seegnify.graph.GetWeightsResponse.weights)
  if (!has_weights()) {
    return NULL;
  }
  clear_has_weights();
  return weights_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetWeightsResponse::set_allocated_weights(::std::string* weights) {
  if (weights != NULL) {
    set_has_weights();
  } else {
    clear_has_weights();
  }
  weights_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), weights);
  // @@protoc_insertion_point(field_set_allocated:seegnify.graph.GetWeightsResponse.weights)
}

// -------------------------------------------------------------------

// SetWeights

// required bytes weights = 1;
inline bool SetWeights::has_weights() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetWeights::set_has_weights() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetWeights::clear_has_weights() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetWeights::clear_weights() {
  weights_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_weights();
}
inline const ::std::string& SetWeights::weights() const {
  // @@protoc_insertion_point(field_get:seegnify.graph.SetWeights.weights)
  return weights_.GetNoArena();
}
inline void SetWeights::set_weights(const ::std::string& value) {
  set_has_weights();
  weights_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:seegnify.graph.SetWeights.weights)
}
#if LANG_CXX11
inline void SetWeights::set_weights(::std::string&& value) {
  set_has_weights();
  weights_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:seegnify.graph.SetWeights.weights)
}
#endif
inline void SetWeights::set_weights(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_weights();
  weights_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:seegnify.graph.SetWeights.weights)
}
inline void SetWeights::set_weights(const void* value, size_t size) {
  set_has_weights();
  weights_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:seegnify.graph.SetWeights.weights)
}
inline ::std::string* SetWeights::mutable_weights() {
  set_has_weights();
  // @@protoc_insertion_point(field_mutable:seegnify.graph.SetWeights.weights)
  return weights_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetWeights::release_weights() {
  // @@protoc_insertion_point(field_release:seegnify.graph.SetWeights.weights)
  if (!has_weights()) {
    return NULL;
  }
  clear_has_weights();
  return weights_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetWeights::set_allocated_weights(::std::string* weights) {
  if (weights != NULL) {
    set_has_weights();
  } else {
    clear_has_weights();
  }
  weights_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), weights);
  // @@protoc_insertion_point(field_set_allocated:seegnify.graph.SetWeights.weights)
}

// -------------------------------------------------------------------

// UpdWeights

// required bytes update = 1;
inline bool UpdWeights::has_update() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdWeights::set_has_update() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdWeights::clear_has_update() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdWeights::clear_update() {
  update_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_update();
}
inline const ::std::string& UpdWeights::update() const {
  // @@protoc_insertion_point(field_get:seegnify.graph.UpdWeights.update)
  return update_.GetNoArena();
}
inline void UpdWeights::set_update(const ::std::string& value) {
  set_has_update();
  update_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:seegnify.graph.UpdWeights.update)
}
#if LANG_CXX11
inline void UpdWeights::set_update(::std::string&& value) {
  set_has_update();
  update_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:seegnify.graph.UpdWeights.update)
}
#endif
inline void UpdWeights::set_update(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_update();
  update_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:seegnify.graph.UpdWeights.update)
}
inline void UpdWeights::set_update(const void* value, size_t size) {
  set_has_update();
  update_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:seegnify.graph.UpdWeights.update)
}
inline ::std::string* UpdWeights::mutable_update() {
  set_has_update();
  // @@protoc_insertion_point(field_mutable:seegnify.graph.UpdWeights.update)
  return update_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdWeights::release_update() {
  // @@protoc_insertion_point(field_release:seegnify.graph.UpdWeights.update)
  if (!has_update()) {
    return NULL;
  }
  clear_has_update();
  return update_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdWeights::set_allocated_update(::std::string* update) {
  if (update != NULL) {
    set_has_update();
  } else {
    clear_has_update();
  }
  update_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), update);
  // @@protoc_insertion_point(field_set_allocated:seegnify.graph.UpdWeights.update)
}

// -------------------------------------------------------------------

// SuccessResponse

// -------------------------------------------------------------------

// ErrorResponse

// required uint32 status = 1;
inline bool ErrorResponse::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ErrorResponse::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ErrorResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ErrorResponse::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 ErrorResponse::status() const {
  // @@protoc_insertion_point(field_get:seegnify.graph.ErrorResponse.status)
  return status_;
}
inline void ErrorResponse::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:seegnify.graph.ErrorResponse.status)
}

// required string message = 2;
inline bool ErrorResponse::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ErrorResponse::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ErrorResponse::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ErrorResponse::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
inline const ::std::string& ErrorResponse::message() const {
  // @@protoc_insertion_point(field_get:seegnify.graph.ErrorResponse.message)
  return message_.GetNoArena();
}
inline void ErrorResponse::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:seegnify.graph.ErrorResponse.message)
}
#if LANG_CXX11
inline void ErrorResponse::set_message(::std::string&& value) {
  set_has_message();
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:seegnify.graph.ErrorResponse.message)
}
#endif
inline void ErrorResponse::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:seegnify.graph.ErrorResponse.message)
}
inline void ErrorResponse::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:seegnify.graph.ErrorResponse.message)
}
inline ::std::string* ErrorResponse::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:seegnify.graph.ErrorResponse.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ErrorResponse::release_message() {
  // @@protoc_insertion_point(field_release:seegnify.graph.ErrorResponse.message)
  if (!has_message()) {
    return NULL;
  }
  clear_has_message();
  return message_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ErrorResponse::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:seegnify.graph.ErrorResponse.message)
}

// -------------------------------------------------------------------

// Request

// optional .seegnify.graph.GetWeights get_weights = 10;
inline bool Request::has_get_weights() const {
  return request_case() == kGetWeights;
}
inline void Request::set_has_get_weights() {
  _oneof_case_[0] = kGetWeights;
}
inline void Request::clear_get_weights() {
  if (has_get_weights()) {
    delete request_.get_weights_;
    clear_has_request();
  }
}
inline const ::seegnify::graph::GetWeights& Request::_internal_get_weights() const {
  return *request_.get_weights_;
}
inline ::seegnify::graph::GetWeights* Request::release_get_weights() {
  // @@protoc_insertion_point(field_release:seegnify.graph.Request.get_weights)
  if (has_get_weights()) {
    clear_has_request();
      ::seegnify::graph::GetWeights* temp = request_.get_weights_;
    request_.get_weights_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::seegnify::graph::GetWeights& Request::get_weights() const {
  // @@protoc_insertion_point(field_get:seegnify.graph.Request.get_weights)
  return has_get_weights()
      ? *request_.get_weights_
      : *reinterpret_cast< ::seegnify::graph::GetWeights*>(&::seegnify::graph::_GetWeights_default_instance_);
}
inline ::seegnify::graph::GetWeights* Request::mutable_get_weights() {
  if (!has_get_weights()) {
    clear_request();
    set_has_get_weights();
    request_.get_weights_ = CreateMaybeMessage< ::seegnify::graph::GetWeights >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:seegnify.graph.Request.get_weights)
  return request_.get_weights_;
}

// optional .seegnify.graph.SetWeights set_weights = 11;
inline bool Request::has_set_weights() const {
  return request_case() == kSetWeights;
}
inline void Request::set_has_set_weights() {
  _oneof_case_[0] = kSetWeights;
}
inline void Request::clear_set_weights() {
  if (has_set_weights()) {
    delete request_.set_weights_;
    clear_has_request();
  }
}
inline const ::seegnify::graph::SetWeights& Request::_internal_set_weights() const {
  return *request_.set_weights_;
}
inline ::seegnify::graph::SetWeights* Request::release_set_weights() {
  // @@protoc_insertion_point(field_release:seegnify.graph.Request.set_weights)
  if (has_set_weights()) {
    clear_has_request();
      ::seegnify::graph::SetWeights* temp = request_.set_weights_;
    request_.set_weights_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::seegnify::graph::SetWeights& Request::set_weights() const {
  // @@protoc_insertion_point(field_get:seegnify.graph.Request.set_weights)
  return has_set_weights()
      ? *request_.set_weights_
      : *reinterpret_cast< ::seegnify::graph::SetWeights*>(&::seegnify::graph::_SetWeights_default_instance_);
}
inline ::seegnify::graph::SetWeights* Request::mutable_set_weights() {
  if (!has_set_weights()) {
    clear_request();
    set_has_set_weights();
    request_.set_weights_ = CreateMaybeMessage< ::seegnify::graph::SetWeights >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:seegnify.graph.Request.set_weights)
  return request_.set_weights_;
}

// optional .seegnify.graph.UpdWeights upd_weights = 12;
inline bool Request::has_upd_weights() const {
  return request_case() == kUpdWeights;
}
inline void Request::set_has_upd_weights() {
  _oneof_case_[0] = kUpdWeights;
}
inline void Request::clear_upd_weights() {
  if (has_upd_weights()) {
    delete request_.upd_weights_;
    clear_has_request();
  }
}
inline const ::seegnify::graph::UpdWeights& Request::_internal_upd_weights() const {
  return *request_.upd_weights_;
}
inline ::seegnify::graph::UpdWeights* Request::release_upd_weights() {
  // @@protoc_insertion_point(field_release:seegnify.graph.Request.upd_weights)
  if (has_upd_weights()) {
    clear_has_request();
      ::seegnify::graph::UpdWeights* temp = request_.upd_weights_;
    request_.upd_weights_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::seegnify::graph::UpdWeights& Request::upd_weights() const {
  // @@protoc_insertion_point(field_get:seegnify.graph.Request.upd_weights)
  return has_upd_weights()
      ? *request_.upd_weights_
      : *reinterpret_cast< ::seegnify::graph::UpdWeights*>(&::seegnify::graph::_UpdWeights_default_instance_);
}
inline ::seegnify::graph::UpdWeights* Request::mutable_upd_weights() {
  if (!has_upd_weights()) {
    clear_request();
    set_has_upd_weights();
    request_.upd_weights_ = CreateMaybeMessage< ::seegnify::graph::UpdWeights >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:seegnify.graph.Request.upd_weights)
  return request_.upd_weights_;
}

inline bool Request::has_request() const {
  return request_case() != REQUEST_NOT_SET;
}
inline void Request::clear_has_request() {
  _oneof_case_[0] = REQUEST_NOT_SET;
}
inline Request::RequestCase Request::request_case() const {
  return Request::RequestCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Response

// optional .seegnify.graph.GetWeightsResponse get_weights = 11;
inline bool Response::has_get_weights() const {
  return response_case() == kGetWeights;
}
inline void Response::set_has_get_weights() {
  _oneof_case_[0] = kGetWeights;
}
inline void Response::clear_get_weights() {
  if (has_get_weights()) {
    delete response_.get_weights_;
    clear_has_response();
  }
}
inline const ::seegnify::graph::GetWeightsResponse& Response::_internal_get_weights() const {
  return *response_.get_weights_;
}
inline ::seegnify::graph::GetWeightsResponse* Response::release_get_weights() {
  // @@protoc_insertion_point(field_release:seegnify.graph.Response.get_weights)
  if (has_get_weights()) {
    clear_has_response();
      ::seegnify::graph::GetWeightsResponse* temp = response_.get_weights_;
    response_.get_weights_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::seegnify::graph::GetWeightsResponse& Response::get_weights() const {
  // @@protoc_insertion_point(field_get:seegnify.graph.Response.get_weights)
  return has_get_weights()
      ? *response_.get_weights_
      : *reinterpret_cast< ::seegnify::graph::GetWeightsResponse*>(&::seegnify::graph::_GetWeightsResponse_default_instance_);
}
inline ::seegnify::graph::GetWeightsResponse* Response::mutable_get_weights() {
  if (!has_get_weights()) {
    clear_response();
    set_has_get_weights();
    response_.get_weights_ = CreateMaybeMessage< ::seegnify::graph::GetWeightsResponse >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:seegnify.graph.Response.get_weights)
  return response_.get_weights_;
}

// optional .seegnify.graph.SuccessResponse success = 12;
inline bool Response::has_success() const {
  return response_case() == kSuccess;
}
inline void Response::set_has_success() {
  _oneof_case_[0] = kSuccess;
}
inline void Response::clear_success() {
  if (has_success()) {
    delete response_.success_;
    clear_has_response();
  }
}
inline const ::seegnify::graph::SuccessResponse& Response::_internal_success() const {
  return *response_.success_;
}
inline ::seegnify::graph::SuccessResponse* Response::release_success() {
  // @@protoc_insertion_point(field_release:seegnify.graph.Response.success)
  if (has_success()) {
    clear_has_response();
      ::seegnify::graph::SuccessResponse* temp = response_.success_;
    response_.success_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::seegnify::graph::SuccessResponse& Response::success() const {
  // @@protoc_insertion_point(field_get:seegnify.graph.Response.success)
  return has_success()
      ? *response_.success_
      : *reinterpret_cast< ::seegnify::graph::SuccessResponse*>(&::seegnify::graph::_SuccessResponse_default_instance_);
}
inline ::seegnify::graph::SuccessResponse* Response::mutable_success() {
  if (!has_success()) {
    clear_response();
    set_has_success();
    response_.success_ = CreateMaybeMessage< ::seegnify::graph::SuccessResponse >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:seegnify.graph.Response.success)
  return response_.success_;
}

// optional .seegnify.graph.ErrorResponse error = 13;
inline bool Response::has_error() const {
  return response_case() == kError;
}
inline void Response::set_has_error() {
  _oneof_case_[0] = kError;
}
inline void Response::clear_error() {
  if (has_error()) {
    delete response_.error_;
    clear_has_response();
  }
}
inline const ::seegnify::graph::ErrorResponse& Response::_internal_error() const {
  return *response_.error_;
}
inline ::seegnify::graph::ErrorResponse* Response::release_error() {
  // @@protoc_insertion_point(field_release:seegnify.graph.Response.error)
  if (has_error()) {
    clear_has_response();
      ::seegnify::graph::ErrorResponse* temp = response_.error_;
    response_.error_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::seegnify::graph::ErrorResponse& Response::error() const {
  // @@protoc_insertion_point(field_get:seegnify.graph.Response.error)
  return has_error()
      ? *response_.error_
      : *reinterpret_cast< ::seegnify::graph::ErrorResponse*>(&::seegnify::graph::_ErrorResponse_default_instance_);
}
inline ::seegnify::graph::ErrorResponse* Response::mutable_error() {
  if (!has_error()) {
    clear_response();
    set_has_error();
    response_.error_ = CreateMaybeMessage< ::seegnify::graph::ErrorResponse >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:seegnify.graph.Response.error)
  return response_.error_;
}

inline bool Response::has_response() const {
  return response_case() != RESPONSE_NOT_SET;
}
inline void Response::clear_has_response() {
  _oneof_case_[0] = RESPONSE_NOT_SET;
}
inline Response::ResponseCase Response::response_case() const {
  return Response::ResponseCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace graph
}  // namespace seegnify

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_graph_2eproto
